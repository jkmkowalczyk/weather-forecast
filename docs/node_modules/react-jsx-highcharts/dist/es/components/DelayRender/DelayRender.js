import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { Component } from 'react';

var DelayRender = function (_Component) {
  _inherits(DelayRender, _Component);

  function DelayRender() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, DelayRender);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DelayRender.__proto__ || _Object$getPrototypeOf(DelayRender)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      render: false
    }, _this.renderTimeout = null, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(DelayRender, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      this.renderTimeout = window.setTimeout(function () {
        _this2.setState({
          render: true
        });
        _this2.renderTimeout = null;
      }, 1);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (this.renderTimeout !== null) {
        window.clearTimeout(this.renderTimeout);
      }
    }
  }, {
    key: 'render',
    value: function render() {
      if (!this.state.render) return null;

      return this.props.children;
    }
  }]);

  return DelayRender;
}(Component);

export default DelayRender;