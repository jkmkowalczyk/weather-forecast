import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import Hidden from '../Hidden';

var Debug = function (_Component) {
  _inherits(Debug, _Component);

  function Debug() {
    _classCallCheck(this, Debug);

    return _possibleConstructorReturn(this, (Debug.__proto__ || _Object$getPrototypeOf(Debug)).apply(this, arguments));
  }

  _createClass(Debug, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _props = this.props,
          varName = _props.varName,
          getChart = _props.getChart;

      var chart = getChart();
      window[varName] = chart.object;
      console.log('Chart instance available as global variable as window.' + varName);
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      window[this.props.varName] = undefined;
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(Hidden, null);
    }
  }]);

  return Debug;
}(Component);

Debug.defaultProps = {
  varName: 'chart'
};


export default Debug;