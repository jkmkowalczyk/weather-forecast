import _extends from 'babel-runtime/helpers/extends';
import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';
import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import { Component } from 'react';
import PropTypes from 'prop-types';
import pickBy from 'lodash-es/pickBy';
import attempt from 'lodash-es/attempt';
import find from 'lodash-es/find';
import getModifiedProps from '../../utils/getModifiedProps';

var PlotBandLabel = function (_Component) {
  _inherits(PlotBandLabel, _Component);

  function PlotBandLabel() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, PlotBandLabel);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PlotBandLabel.__proto__ || _Object$getPrototypeOf(PlotBandLabel)).call.apply(_ref, [this].concat(args))), _this), _this.getLabelProps = function (props) {
      return pickBy(props, function (value, propName) {
        return PlotBandLabel.labelProps.indexOf(propName) > -1;
      });
    }, _this.updatePlotBandLabel = function (config) {
      var _this$props = _this.props,
          id = _this$props.id,
          getAxis = _this$props.getAxis;

      var axis = getAxis();

      window.setTimeout(function () {
        var plotBand = axis.object && find(axis.object.plotLinesAndBands, function (band) {
          return band.id === id;
        });
        if (plotBand) {
          plotBand.options.label = _this.getLabelProps(config);
          plotBand.render();
        }
      }, 1);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(PlotBandLabel, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _props = this.props,
          text = _props.children,
          rest = _objectWithoutProperties(_props, ['children']);

      this.updatePlotBandLabel(_extends({
        text: text
      }, rest));
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      if (getModifiedProps(prevProps, this.props, true) === false) return;

      var _props2 = this.props,
          text = _props2.children,
          rest = _objectWithoutProperties(_props2, ['children']);

      this.updatePlotBandLabel(_extends({
        text: text
      }, rest));
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      var _props3 = this.props,
          children = _props3.children,
          rest = _objectWithoutProperties(_props3, ['children']);

      attempt(this.updatePlotBandLabel, _extends({
        text: null
      }, rest));
    }
  }, {
    key: 'render',
    value: function render() {
      return null;
    }
  }]);

  return PlotBandLabel;
}(Component);

PlotBandLabel.labelProps = ['text', 'align', 'rotation', 'style', 'textAlign', 'useHTML', 'verticalAlign', 'x', 'y'];


export default PlotBandLabel;