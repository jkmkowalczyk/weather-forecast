import _Object$assign from 'babel-runtime/core-js/object/assign';
import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';
import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import HighchartsChart from '../HighchartsChart';
import Chart from '../Chart';
import XAxis from '../XAxis';
import YAxis from '../YAxis';
import Hidden from '../Hidden';

var defaultSparklinePlotOptions = {
  series: {
    animation: false,
    lineWidth: 1,
    shadow: false,
    states: {
      hover: {
        lineWidth: 1
      }
    },
    marker: {
      radius: 1,
      states: {
        hover: {
          radius: 2
        }
      }
    },
    fillOpacity: 0.25
  }
};

var HighchartsSparkline = function (_Component) {
  _inherits(HighchartsSparkline, _Component);

  function HighchartsSparkline() {
    _classCallCheck(this, HighchartsSparkline);

    return _possibleConstructorReturn(this, (HighchartsSparkline.__proto__ || _Object$getPrototypeOf(HighchartsSparkline)).apply(this, arguments));
  }

  _createClass(HighchartsSparkline, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          height = _props.height,
          width = _props.width,
          margin = _props.margin,
          style = _props.style,
          series = _props.series,
          children = _props.children,
          rest = _objectWithoutProperties(_props, ['height', 'width', 'margin', 'style', 'series', 'children']);

      var hasSeriesProp = !!series;
      var chartStyle = _Object$assign({ overflow: 'visible' }, style);
      // If you want to use functionality like Tooltips, pass the data component on the `series` prop
      var Series = hasSeriesProp ? series : children;

      return React.createElement(
        HighchartsChart,
        rest,
        React.createElement(Chart, {
          height: height,
          width: width,
          animation: false,
          backgroundColor: null,
          borderWidth: 0,
          margin: margin,
          style: chartStyle,
          skipClone: true }),
        React.createElement(XAxis, { labels: { enabled: false }, startOnTick: false, endOnTick: false, tickPositions: [] }),
        React.createElement(
          YAxis,
          { id: 'sparkline', labels: { enabled: false }, startOnTick: false, endOnTick: false, tickPositions: [0] },
          Series
        ),
        hasSeriesProp && React.createElement(
          Hidden,
          null,
          children
        )
      );
    }
  }]);

  return HighchartsSparkline;
}(Component);

HighchartsSparkline.defaultProps = {
  height: 20,
  width: 120,
  margin: [2, 0, 2, 0],
  style: {},
  plotOptions: defaultSparklinePlotOptions
};


export default HighchartsSparkline;