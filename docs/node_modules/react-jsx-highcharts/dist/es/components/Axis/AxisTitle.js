import _extends from 'babel-runtime/helpers/extends';
import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';
import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import { Component } from 'react';
import PropTypes from 'prop-types';
import attempt from 'lodash-es/attempt';
import getModifiedProps from '../../utils/getModifiedProps';

var AxisTitle = function (_Component) {
  _inherits(AxisTitle, _Component);

  function AxisTitle() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, AxisTitle);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = AxisTitle.__proto__ || _Object$getPrototypeOf(AxisTitle)).call.apply(_ref, [this].concat(args))), _this), _this.updateAxisTitle = function (config) {
      var axis = _this.props.getAxis();
      axis.setTitle(config, true);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(AxisTitle, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _props = this.props,
          text = _props.children,
          rest = _objectWithoutProperties(_props, ['children']); // eslint-disable-line no-unused-vars


      this.updateAxisTitle(_extends({}, rest, {
        text: text
      }));
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      var modifiedProps = getModifiedProps(prevProps, this.props, true);
      if (modifiedProps !== false) {
        this.updateAxisTitle(modifiedProps);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      attempt(this.updateAxisTitle, { text: null });
    }
  }, {
    key: 'render',
    value: function render() {
      return null;
    }
  }]);

  return AxisTitle;
}(Component);

export default AxisTitle;